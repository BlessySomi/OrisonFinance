@page "/"
@layout LoginLayout
@using System.Data
@using Microsoft.AspNetCore.Http
@using System.Net.Http
@using OrisonFinance.Shared.Models.General
@using DevExpress.Blazor.Navigation
@using Blazored.LocalStorage;
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage
@inject LocalStorage localstorage
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject OrisonFinance.Client.Services.AccountService accService
<style>
    .login {
        position: relative;
        z-index: 1;
        background: #ffffff;
        max-width: 550px;
        margin: 0 auto 80px;
        padding: 45px;
        text-align: center;
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3), 0 5px 5px 0 rgba(0, 0, 0, 0.19);
        transition-duration: 0.3s;
        border-radius: 6px;
    }

    .loginParent {
        max-width: 400px;
        padding: 8% 0 0;
        margin: auto;
    }

    .login:hover {
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.7), 0 5px 5px 0 rgba(0, 0, 0, 0.27);
    }

    .button {
        width: 100%;
        background-color: #04396d;
        border: none;
        color: white;
        padding: 8px 30px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 15px;
        border-radius: 9px;
        cursor: pointer;
        -webkit-transition-duration: 0.4s;
        transition-duration: 0.4s;
    }

    .button2:hover {
        box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
    }

    .textBox {
        width: 100%;
        padding: 7px 20px;
        display: inline-block;
        border: 1.1px solid #ccc;
        border-radius: 10px;
        box-sizing: border-box;
        background-color: #e7eef4;
    }

        .textBox:hover {
            background-color: #f5f4f4;
        }
</style>
<div class="container-fluid">
    <div class="loginParent">
        <div class="login">
            <div class="form-group" style="text-align: Center">
                <label style="color: #04396d;font-size:large;font-weight: bold;">Login</label>
            </div>
            <div class="form-group" style="text-align: Center;font-weight: bold;">
                <label style="color: #04396d">Indian Bakery</label>
            </div>
            <div class="form-group" style="padding-top:1%;">
                <input type="text" placeholder="UserName" @bind-value="@objSalesman.Username" class="textBox" />
                @*<DxTextBox NullText="UserName" @bind-Text="@username" CssClass="textBox"></DxTextBox>*@
            </div>
            <div class="form-group" style="padding-top:1%;">
                <input type="password" placeholder="Password" @bind-value="@objSalesman.Password" class="textBox" />
                @*<DxTextBox NullText="Password" @bind-Text="@password" Password="true" CssClass="textBox"></DxTextBox>*@
            </div>
            <div class="form-group d-flex align-items-center justify-content-between mt-4 mb-0">
                <label class="text-primary text-white">@lblmsg</label>
            </div>
            <div class="form-group" style="padding-top:1%;">
                <DxButton Text="Login" CssClass="button button2" @onclick="@LoginSalesman"></DxButton>
            </div>
        </div>
    </div>
</div>
@code{
    int userid;
    string lblmsg;
    IEnumerable<LoginModel> SalesmanLogin = new List<LoginModel>();

    LoginModel objSalesman = new LoginModel();

    protected async Task LoginSalesman()
    {
        Console.WriteLine("entered");
        Console.WriteLine(objSalesman.Username);
        objSalesman.Password = accService.PasswordEncode(objSalesman.Password);
        SalesmanLogin = await Http.PostJsonAsync<IEnumerable<LoginModel>>("api/Accounts/LoginUserNew", objSalesman);
        Console.WriteLine("Closed");
        if (SalesmanLogin.Count() == 0)
        {
            lblmsg = "Username/Password is incorrect.";
            Console.WriteLine(lblmsg);
        }
        else
        {
             Console.WriteLine(SalesmanLogin.First().Username);
            await localStorage.SetItemAsync("ID", SalesmanLogin.First().ID);
            await localStorage.SetItemAsync("Username", SalesmanLogin.First().Username);
            await localStorage.SetItemAsync("Password", SalesmanLogin.First().Password);
            await localStorage.SetItemAsync("LocalSessionUserId", SalesmanLogin.First().ID);
            userid = await localStorage.GetItemAsync<int>("LocalSessionUserId");
            Console.WriteLine(userid);
            NavigationManager.NavigateTo("TaxInvoice");
        }

    }
}